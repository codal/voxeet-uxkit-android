def version_from_sdk = { String version ->  project.hasProperty("CICD_FROM_BUILD_ID") && project.CICD_FROM_BUILD_ID.size() > 0
        ? "${version}-${project.CICD_BUILD_ID}"
        : "${version}" }

def version_uxkit = { String version ->  project.hasProperty("CICD_BUILD_ID") && project.CICD_BUILD_ID.size() > 0
        ? "${version}-${project.CICD_BUILD_ID}"
        : "${version}" }

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.3.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'

        classpath 'com.jaredsburrows:gradle-license-plugin:0.8.42'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.6'
    }
}

ext {
    buildToolsVersion = "28.0.3"
    minSdkVersion = 16
    compileSdkVersion = 28
    targetSdkVersion = 27
    supportLibVersion = "28.0.0"

    //underlying sdk
    voxeetSdkVersion = version_from_sdk("2.3.0")

    //uxkit modules
    pushSdkVersion = version_uxkit("2.3.0")
    firebaseSdkVersion = version_uxkit("2.3.0")
    voxeetSdkToolkitVersion = version_uxkit("2.3.0")
    voxeetIncomingCall = version_uxkit("2.3.0")
    systemServiceVersion = version_uxkit("2.3.0")
    telecomSystemServiceVersion = version_uxkit("2.3.0")
}

allprojects {
    repositories {
        mavenLocal()
        google()
        jcenter()
    }
}

task cleanAll {
    dependsOn(':uxkit:clean')
    dependsOn(':uxkit-exoplayer-support:clean')
    dependsOn(':uxkit-firebase:clean')
    dependsOn(':uxkit-incoming-call:clean')
    dependsOn(':uxkit-self-managed-call:clean')
    dependsOn(':uxkit-system-service:clean')
    dependsOn(':uxkit-youtube:clean')
}

task assembleAll {
    dependsOn(':uxkit:assembleRelease')
    dependsOn(':uxkit-exoplayer-support:assembleRelease')
    dependsOn(':uxkit-firebase:assembleRelease')
    dependsOn(':uxkit-incoming-call:assembleRelease')
    dependsOn(':uxkit-self-managed-call:assembleRelease')
    dependsOn(':uxkit-system-service:assembleRelease')
    dependsOn(':uxkit-youtube:assembleRelease')
}

task installAll {
    dependsOn(':uxkit:install')
    dependsOn(':uxkit-exoplayer-support:install')
    dependsOn(':uxkit-firebase:install')
    dependsOn(':uxkit-incoming-call:install')
    dependsOn(':uxkit-self-managed-call:install')
    dependsOn(':uxkit-system-service:install')
    dependsOn(':uxkit-youtube:install')
}

task uploadAll {
    dependsOn(':uxkit:bintrayUpload')
    dependsOn(':uxkit-exoplayer-support:bintrayUpload')
    dependsOn(':uxkit-firebase:bintrayUpload')
    dependsOn(':uxkit-incoming-call:bintrayUpload')
    dependsOn(':uxkit-self-managed-call:bintrayUpload')
    dependsOn(':uxkit-system-service:bintrayUpload')
    dependsOn(':uxkit-youtube:bintrayUpload')
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

subprojects {
    task allDeps(type: DependencyReportTask) {}
}
